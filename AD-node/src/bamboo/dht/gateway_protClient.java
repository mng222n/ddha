/*
 * Automatically generated by jrpcgen 1.0.5 on 7/1/08 11:04 AM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://acplt.org/ks/remotetea.html for details
 */
package bamboo.dht;
import org.acplt.oncrpc.*;
import java.io.IOException;

import java.net.InetAddress;

/**
 * The class <code>gateway_protClient</code> implements the client stub proxy
 * for the BAMBOO_DHT_GATEWAY_PROGRAM remote program. It provides method stubs
 * which, when called, in turn call the appropriate remote method (procedure).
 */
public class gateway_protClient extends OncRpcClientStub {

    /**
     * Constructs a <code>gateway_protClient</code> client stub proxy object
     * from which the BAMBOO_DHT_GATEWAY_PROGRAM remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public gateway_protClient(InetAddress host, int protocol)
           throws OncRpcException, IOException {
        super(host, gateway_prot.BAMBOO_DHT_GATEWAY_PROGRAM, 3, 0, protocol);
    }

    /**
     * Constructs a <code>gateway_protClient</code> client stub proxy object
     * from which the BAMBOO_DHT_GATEWAY_PROGRAM remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param port Port number at host where the remote program can be reached.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public gateway_protClient(InetAddress host, int port, int protocol)
           throws OncRpcException, IOException {
        super(host, gateway_prot.BAMBOO_DHT_GATEWAY_PROGRAM, 3, port, protocol);
    }

    /**
     * Constructs a <code>gateway_protClient</code> client stub proxy object
     * from which the BAMBOO_DHT_GATEWAY_PROGRAM remote program can be accessed.
     * @param client ONC/RPC client connection object implementing a particular
     *   protocol.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public gateway_protClient(OncRpcClient client)
           throws OncRpcException, IOException {
        super(client);
    }

    /**
     * Constructs a <code>gateway_protClient</code> client stub proxy object
     * from which the BAMBOO_DHT_GATEWAY_PROGRAM remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param program Remote program number.
     * @param version Remote program version number.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public gateway_protClient(InetAddress host, int program, int version, int protocol)
           throws OncRpcException, IOException {
        super(host, program, version, 0, protocol);
    }

    /**
     * Constructs a <code>gateway_protClient</code> client stub proxy object
     * from which the BAMBOO_DHT_GATEWAY_PROGRAM remote program can be accessed.
     * @param host Internet address of host where to contact the remote program.
     * @param program Remote program number.
     * @param version Remote program version number.
     * @param port Port number at host where the remote program can be reached.
     * @param protocol {@link org.acplt.oncrpc.OncRpcProtocols Protocol} to be
     *   used for ONC/RPC calls.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public gateway_protClient(InetAddress host, int program, int version, int port, int protocol)
           throws OncRpcException, IOException {
        super(host, program, version, port, protocol);
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_NULL_2.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public void BAMBOO_DHT_PROC_NULL_2()
           throws OncRpcException, IOException {
        XdrVoid args$ = XdrVoid.XDR_VOID;
        XdrVoid result$ = XdrVoid.XDR_VOID;
        client.call(gateway_prot.BAMBOO_DHT_PROC_NULL_2, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION, args$, result$);
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_PUT_2.
     * @param arg1 parameter (of type bamboo_put_args) to the remote procedure call.
     * @return Result from remote procedure call (of type bamboo_stat).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public int BAMBOO_DHT_PROC_PUT_2(bamboo_put_args arg1)
           throws OncRpcException, IOException {
        XdrInt result$ = new XdrInt();
        client.call(gateway_prot.BAMBOO_DHT_PROC_PUT_2, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION, arg1, result$);
        return result$.intValue();
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_GET_2.
     * @param arg1 parameter (of type bamboo_get_args) to the remote procedure call.
     * @return Result from remote procedure call (of type bamboo_get_res).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public bamboo_get_res BAMBOO_DHT_PROC_GET_2(bamboo_get_args arg1)
           throws OncRpcException, IOException {
        bamboo_get_res result$ = new bamboo_get_res();
        client.call(gateway_prot.BAMBOO_DHT_PROC_GET_2, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION, arg1, result$);
        return result$;
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_NULL_3.
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public void BAMBOO_DHT_PROC_NULL_3()
           throws OncRpcException, IOException {
        XdrVoid args$ = XdrVoid.XDR_VOID;
        XdrVoid result$ = XdrVoid.XDR_VOID;
        client.call(gateway_prot.BAMBOO_DHT_PROC_NULL_3, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION_3, args$, result$);
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_PUT_3.
     * @param arg1 parameter (of type bamboo_put_arguments) to the remote procedure call.
     * @return Result from remote procedure call (of type bamboo_stat).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public int BAMBOO_DHT_PROC_PUT_3(bamboo_put_arguments arg1)
           throws OncRpcException, IOException {
        XdrInt result$ = new XdrInt();
        client.call(gateway_prot.BAMBOO_DHT_PROC_PUT_3, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION_3, arg1, result$);
        return result$.intValue();
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_GET_3.
     * @param arg1 parameter (of type bamboo_get_args) to the remote procedure call.
     * @return Result from remote procedure call (of type bamboo_get_result).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public bamboo_get_result BAMBOO_DHT_PROC_GET_3(bamboo_get_args arg1)
           throws OncRpcException, IOException {
        bamboo_get_result result$ = new bamboo_get_result();
        client.call(gateway_prot.BAMBOO_DHT_PROC_GET_3, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION_3, arg1, result$);
        return result$;
    }

    /**
     * Call remote procedure BAMBOO_DHT_PROC_RM_3.
     * @param arg1 parameter (of type bamboo_rm_arguments) to the remote procedure call.
     * @return Result from remote procedure call (of type bamboo_stat).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    public int BAMBOO_DHT_PROC_RM_3(bamboo_rm_arguments arg1)
           throws OncRpcException, IOException {
        XdrInt result$ = new XdrInt();
        client.call(gateway_prot.BAMBOO_DHT_PROC_RM_3, gateway_prot.BAMBOO_DHT_GATEWAY_VERSION_3, arg1, result$);
        return result$.intValue();
    }

}
// End of gateway_protClient.java
